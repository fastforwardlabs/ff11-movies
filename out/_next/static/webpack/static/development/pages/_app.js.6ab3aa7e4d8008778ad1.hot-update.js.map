{"version":3,"file":"static/webpack/static/development/pages/_app.js.6ab3aa7e4d8008778ad1.hot-update.js","sources":["webpack:///./pages/_app.js"],"sourcesContent":["import React from 'react'\nimport App, { Container } from 'next/app'\nimport { info } from '../data/sample_movie_info.js'\nimport getConfig from 'next-server/config'\nlet { publicRuntimeConfig } = getConfig()\nlet linkPrefix = publicRuntimeConfig.linkPrefix\nimport Link from '../parts/PrefixedLink'\nimport Bar from '../parts/Bar'\nimport * as chroma from 'chroma-js'\n\nlet algnames = ['NBSVM', 'BERT']\nlet algfiles = [\n  'nbsvm_lime_grouped_pretty.json',\n  'bert_lime_grouped_pretty.json',\n  'nbsvm_lime_grouped_pretty_word.json',\n]\n\nclass MyApp extends App {\n  static async getInitialProps({ Component, ctx }) {\n    let pageProps = {}\n\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps(ctx)\n    }\n\n    return { pageProps }\n  }\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      analyze: false,\n      data: null,\n      data_select: 1,\n      show_accuracy: false,\n      sort: 'reviews',\n      review_sort: 'date',\n    }\n    this.setAnalyze = this.setAnalyze.bind(this)\n    this.setReviewSort = this.setReviewSort.bind(this)\n    this.setAccuracy = this.setAccuracy.bind(this)\n    this.setSort = this.setSort.bind(this)\n    this.setAlgo = this.setAlgo.bind(this)\n  }\n\n  componentDidMount() {\n    fetch(linkPrefix + '/static/data/' + algfiles[this.state.data_select])\n      .then(r => r.json())\n      .then(r => {\n        this.setState({ data: r })\n      })\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.data_select !== prevState.data_select) {\n      fetch(linkPrefix + '/static/data/' + algfiles[this.state.data_select])\n        .then(r => r.json())\n        .then(r => {\n          this.setState({ data: r })\n        })\n    }\n  }\n\n  setAnalyze(value) {\n    this.setState({ analyze: value })\n  }\n\n  setReviewSort(value) {\n    this.setState({ review_sort: value })\n  }\n\n  setSort(value) {\n    this.setState({ sort: value })\n  }\n\n  setAlgo(index) {\n    this.setState({ data_select: index })\n  }\n\n  setAccuracy(value) {\n    this.setState({ show_accuracy: value })\n  }\n\n  render() {\n    let { analyze, data, sort, review_sort } = this.state\n    let { Component, pageProps } = this.props\n    let font_size = 16\n    let line_height = 1.5\n    let grem = font_size * line_height\n\n    const { pathname } = this.props.router\n\n    let is_topic = pathname.startsWith('/topic')\n\n    return (\n      <div>\n        <style jsx global>{`\n          * {\n            box-sizing: border-box;\n            font-family: sans-serif;\n          }\n          html {\n            background: #222;\n          }\n          body {\n            margin: 0;\n            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto',\n              'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans',\n              'Helvetica Neue', sans-serif;\n            font-size: 16px;\n            line-height: 1.5;\n            background: white;\n            overflow-x: hidden;\n            -webkit-font-smoothing: antialiased;\n            -moz-osx-font-smoothing: grayscale;\n          }\n          code {\n            font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n              monospace;\n          }\n          a,\n          button {\n            color: inherit;\n          }\n          a:hover,\n          button:hover {\n            opacity: 0.75;\n          }\n          a.no-opacity-hover:hover,\n          button.no-opacity-hover:hover {\n            opacity: 1;\n          }\n          a.no-underline {\n            text-decoration: none;\n          }\n          a:hover .opacity-inner-hover,\n          button:hover .opacity-inner-hover {\n            opacity: 0.75;\n          }\n          button {\n            font: inherit;\n            font-size: inherit;\n            line-height: inherit;\n            border: none;\n            padding: 0;\n            margin: 0;\n            background: transparent;\n            cursor: pointer;\n          }\n          button:focus {\n            outline: none;\n          }\n          .hover-block-container .hover-block {\n            display: none;\n          }\n          .hover-block-container:hover .hover-block {\n            display: block;\n          }\n        `}</style>\n        <div\n          style={{\n            borderBottom: 'solid 1px black',\n            background: '#222',\n            color: 'white',\n          }}\n        >\n          <Link href=\"/\">\n            <a\n              className=\"no-opacity-hover\"\n              style={{\n                padding: grem / 2,\n                display: 'block',\n                cursor: is_topic ? 'pointer' : 'default',\n                textDecoration: 'none',\n                fontWeight: 700,\n                display: 'flex',\n              }}\n            >\n              <div\n                style={{\n                  width: grem,\n                  height: grem,\n                  background: 'white',\n                  marginRight: grem / 2,\n                  color: 'black',\n                  display: 'flex',\n                  textAlign: 'center',\n                }}\n              >\n                TF\n              </div>\n              TextFlicks\n            </a>\n          </Link>\n        </div>\n        <div\n          style={{\n            paddingBottom: this.state.show_accuracy ? grem * 4.5 : grem * 4,\n          }}\n        >\n          {data ? (\n            <Container>\n              <Component\n                {...pageProps}\n                font_size={font_size}\n                line_height={line_height}\n                grem={grem}\n                analyze={analyze}\n                data={data}\n                info={info}\n                sort={sort}\n                review_sort={review_sort}\n                setAnalyze={this.setAnalyze}\n                setSort={this.setSort}\n                setReviewSort={this.setReviewSort}\n                setAlgo={this.setAlgo}\n                algnames={algnames}\n                data_select={this.state.data_select}\n                show_accuracy={this.state.show_accuracy}\n                setAccuracy={this.setAccuracy}\n              />\n            </Container>\n          ) : (\n            <div style={{ padding: grem / 2 }}>Loading...</div>\n          )}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default MyApp\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAKA;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;;;;;;AACA;AACA;;AADA;AACA;;AAEA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AAdA;AAeA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;;;AAEA;AACA;AAAA;AAAA;AACA;;;AAEA;AACA;AAAA;AAAA;AACA;;;AAEA;AACA;AAAA;AAAA;AACA;;;AAEA;AACA;AAAA;AAAA;AACA;;;AAEA;AACA;AAAA;AAAA;AACA;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AALA;AASA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiEA;AACA;AACA;AACA;AAHA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AALA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkBA;AACA;AADA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;AAnNA;AACA;AAqNA;;;;A","sourceRoot":""}