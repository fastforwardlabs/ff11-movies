{"version":3,"file":"static/webpack/static/development/pages/_app.js.57dd40b9761c221e7d29.hot-update.js","sources":["webpack:///./pages/Topic2.js"],"sourcesContent":["import { withRouter } from 'next/router'\nimport Link from 'next/link'\nimport * as chroma from 'chroma-js'\nimport * as _ from 'lodash'\nimport { nouns, adjectives } from '../data/corpora.js'\nimport getConfig from 'next-server/config'\nimport Bar from '../parts/Bar'\nimport {\n  scaleRed,\n  scaleBlue,\n  scaleTextRed,\n  scaleTextBlue,\n  colorExtend,\n  class_labels,\n  Border,\n} from '../parts/Static'\nimport Sentences from '../parts/Sentences'\nimport Reviews from '../parts/Reviews'\n\nlet { publicRuntimeConfig } = getConfig()\nlet linkPrefix = publicRuntimeConfig.linkPrefix\n\nclass Page extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      show_all_positive: false,\n      show_all_negative: false,\n    }\n  }\n\n  render() {\n    let {\n      font_size,\n      line_height,\n      data_select,\n      grem,\n      router,\n      analyze,\n      data,\n      info,\n      setAnalyze,\n      review_sort,\n      setReviewSort,\n      show_accuracy,\n      setAccuracy,\n      compare,\n      setCompare,\n      nbsvm_data,\n    } = this.props\n\n    console.log(this.props)\n\n    let info_ids = info.map(o => o.og_id)\n    let topic_info = info[info_ids.indexOf(router.query.id)]\n    let reviews = data.filter(o => o.url === router.query.id)\n    let nreviews = nbsvm_data.filter(o => o.url === router.query.id)\n\n    // compare and show_accuracy only when analyze is on\n    show_accuracy = show_accuracy && analyze\n    compare = compare && analyze\n\n    let stick_top = grem * 2\n    if (show_accuracy || compare) stick_top = grem * 3\n    if (show_accuracy && compare) {\n      stick_top = grem * 5\n    } else if (show_accuracy) {\n      stick_top = grem * 3\n    } else if (compare) {\n      stick_top = grem * 4\n    }\n\n    return (\n      <div>\n        <Bar\n          grem={grem}\n          setAnalyze={setAnalyze}\n          analyze={analyze}\n          setAlgo={this.props.setAlgo}\n          algnames={this.props.algnames}\n          data_select={this.props.data_select}\n          show_accuracy={show_accuracy}\n          setAccuracy={setAccuracy}\n          compare={compare}\n          setCompare={setCompare}\n          data={reviews}\n          nbsvm_data={nreviews}\n        />\n\n        <div style={{}}>\n          <div\n            style={{\n              maxWidth: 700,\n              margin: '0 auto',\n              padding: grem / 2,\n            }}\n          >\n            <div style={{ marginBottom: grem * 0 }}>\n              <div>{topic_info.Title}</div>\n              <div style={{ textIndent: grem }}>\n                {topic_info.Year} &middot; {topic_info.Runtime} &middot;{' '}\n                {topic_info.Rated}\n              </div>\n              <div style={{ textIndent: grem }}>\n                {topic_info.Plot}{' '}\n                <a href={`https://www.imdb.com/title/${topic_info.imdbID}`}>\n                  IMDB â†’\n                </a>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {analyze ? (\n          <div style={{ zIndex: 998, position: 'relative' }}>\n            {compare ? <Border /> : null}\n            <div\n              style={{\n                maxWidth: compare ? 700 * 2 + grem + 2 : 700,\n                margin: '0 auto',\n                display: compare ? 'grid' : 'block',\n                gridTemplateColumns: '1fr 1fr',\n              }}\n            >\n              {compare ? (\n                <div style={{ borderRight: 'solid 1px black' }}>\n                  <Sentences grem={grem} reviews={nreviews} analyze={analyze} />\n                </div>\n              ) : null}\n              <div style={{ borderLeft: compare ? 'solid 1px black' : 'none' }}>\n                <Sentences grem={grem} reviews={reviews} analyze={analyze} />\n              </div>\n            </div>\n            {compare ? <Border /> : null}\n          </div>\n        ) : null}\n\n        <div\n          style={{\n            // position: 'sticky',\n            position: 'relative',\n            // top: stick_top,\n            background: 'white',\n          }}\n        >\n          <div\n            style={{\n              maxWidth: 700,\n              margin: '0 auto',\n              padding: grem / 2,\n            }}\n          >\n            <div\n              style={{\n                display: 'flex',\n                paddingRight: grem / 4,\n                marginLeft: -grem / 4,\n              }}\n            >\n              <div style={{ paddingLeft: grem / 4, paddingRight: grem / 4 }}>\n                {reviews.length} reviews sorted by most:\n              </div>\n              {(analyze\n                ? show_accuracy\n                  ? [\n                      ['recent', 'date'],\n                      ['positive', 'positive'],\n                      ['negative', 'negative'],\n                      ['accurate', 'accurate'],\n                      ['inaccurate', 'inaccurate'],\n                    ]\n                  : [\n                      ['recent', 'date'],\n                      ['positive', 'positive'],\n                      ['negative', 'negative'],\n                    ]\n                : [['recent', 'date']]\n              ).map(a =>\n                review_sort === a[1] ? (\n                  <div\n                    style={{\n                      paddingLeft: grem / 4,\n                      paddingRight: grem / 4,\n                      background: '#222',\n                      color: 'white',\n                    }}\n                  >\n                    {a[0]}\n                  </div>\n                ) : (\n                  <button\n                    onClick={() => {\n                      setReviewSort(a[1])\n                    }}\n                    style={{\n                      paddingLeft: grem / 4,\n                      paddingRight: grem / 4,\n                      textDecoration: 'underline',\n                    }}\n                  >\n                    {a[0]}\n                  </button>\n                )\n              )}\n            </div>\n          </div>\n        </div>\n\n        <div style={{ position: 'relative' }}>\n          <div\n            style={{\n              maxWidth: compare ? 700 * 2 + grem + 2 : 700,\n              margin: '0 auto',\n              display: compare ? 'grid' : 'block',\n              gridTemplateColumns: '1fr 1fr',\n            }}\n          >\n            {compare ? (\n              <div style={{ borderRight: 'solid 1px black' }}>\n                <Reviews\n                  reviews={nreviews}\n                  grem={grem}\n                  analyze={analyze}\n                  show_accuracy={show_accuracy}\n                  review_sort={review_sort}\n                  setReviewSort={setReviewSort}\n                />\n              </div>\n            ) : null}\n            <div style={{ borderLeft: compare ? 'solid 1px black' : 'none' }}>\n              <Reviews\n                reviews={reviews}\n                grem={grem}\n                analyze={analyze}\n                show_accuracy={show_accuracy}\n                review_sort={review_sort}\n                setReviewSort={setReviewSort}\n              />\n            </div>\n          </div>\n          {compare ? <Border /> : null}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(Page)\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AASA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAFA;AAMA;AACA;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAoBA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAekBA;AAGA;AACA;AACA;AACA;AACA;AAJA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAbA;AA+BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAJA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AA9NA;AACA;AAgOA;;;;A","sourceRoot":""}