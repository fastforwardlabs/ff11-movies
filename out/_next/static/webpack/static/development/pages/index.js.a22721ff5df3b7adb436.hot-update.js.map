{"version":3,"file":"static/webpack/static/development/pages/index.js.a22721ff5df3b7adb436.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import React from 'react'\n// import { data } from '../data/bert_lime_grouped_pretty'\n// import { data } from '../data/nbsvm_lime_grouped_pretty_word'\nimport { data } from '../data/nbsvm_lime_grouped_pretty'\nimport { info } from '../data/sample_movie_info'\nimport Link from 'next/link'\nimport * as _ from 'lodash'\nimport * as d3 from 'd3'\nimport * as chroma from 'chroma-js'\n\nlet class_labels = ['negative', 'positive']\nlet red = chroma('red').luminance(0.35)\nlet blue = chroma('blue').luminance(0.35)\nlet scaleRed = chroma.scale(['white', red]).mode('lch')\nlet scaleBlue = chroma.scale(['white', blue]).mode('lch')\n\nclass Index extends React.Component {\n  componentDidMount() {\n    // let boxed = data.reduce((dict, current) => {\n    //   let slice = Object.assign({}, dict)\n    //   if (slice[current.url] === undefined) {\n    //     slice[current.url] = 'exists'\n    //   }\n    //   return slice\n    // }, {})\n    // let movie_keys = Object.keys(boxed)\n    // var promises = movie_keys.map((k, i) => {\n    //   return fetch(`http://www.omdbapi.com/?apikey=af4abd65&i=${k}`)\n    //     .then(r => r.json())\n    //     .then(json => {\n    //       let og_id = k\n    //       if (json.Title === '#DUPE#') {\n    //         return fetch(\n    //           `http://www.omdbapi.com/?apikey=af4abd65&i=${json.imdbID}`\n    //         )\n    //           .then(r => r.json())\n    //           .then(json => {\n    //             let json_mod = Object.assign({}, json)\n    //             json_mod.og_id = og_id\n    //             return json_mod\n    //           })\n    //       } else {\n    //         let json_mod = Object.assign({}, json)\n    //         json_mod.og_id = og_id\n    //         return json_mod\n    //       }\n    //     })\n    // })\n    // Promise.all(promises).then(function(results) {\n    //   console.log(JSON.stringify(results))\n    // })\n  }\n\n  render() {\n    let { font_size, line_height, grem, analyze } = this.props\n    let sorted = info.map(o => {\n      return { title: o.Title, id: o.og_id, plot: o.Plot, children: [] }\n    })\n    let ids = sorted.map(o => o.id)\n    for (let i = 0; i < data.length; i++) {\n      let o = data[i]\n      let id = o.url\n      let index = ids.indexOf(id)\n      if (index === -1) {\n        console.log('miss')\n      } else {\n        sorted[index].children.push(o)\n      }\n    }\n    sorted = _.sortBy(sorted, [\n      function(o) {\n        return o.children.length\n      },\n    ])\n\n    return (\n      <div>\n        <div>\n          <div style={{ paddingTop: grem, paddingBottom: grem * 3 }}>\n            <div\n              style={{\n                maxWidth: 840,\n                border: 'solid 1px black',\n                borderBottom: 'none',\n                margin: `0 auto`,\n              }}\n            >\n              <div\n                style={{\n                  display: 'grid',\n                  gridTemplateColumns: `1fr ${grem * 6}px`,\n                  borderBottom: 'solid 1px black',\n                  fontWeight: 700,\n                  fontSize: font_size * 0.875,\n                }}\n              >\n                <div\n                  style={{\n                    lineHeight: line_height,\n                    padding: grem / 2,\n                  }}\n                >\n                  TOPIC\n                </div>\n                <div\n                  style={{\n                    padding: grem / 2,\n                    textAlign: 'center',\n                  }}\n                >\n                  REVIEWS\n                </div>\n              </div>\n\n              <div>\n                {sorted.map((o, i) => {\n                  let reviews = data.filter(r => r.url === o.id)\n\n                  let counts = reviews.reduce(\n                    (counts, r) => {\n                      let slice = counts.slice()\n                      if (r.class_probabilities) {\n                        if (\n                          r.class_probabilities[1] > r.class_probabilities[0]\n                        ) {\n                          slice[1] += 1\n                        } else {\n                          slice[0] += 1\n                        }\n                      } else {\n                        if (r.class === 'pos') {\n                          slice[1] += 1\n                        } else if (r.class === 'neg') {\n                          slice[0] += 1\n                        }\n                      }\n                      return slice\n                    },\n                    [0, 0]\n                  )\n\n                  let winner_count_index = 0\n                  if (counts[1] > counts[0]) winner_count_index = 1\n                  let winner_names = ['negative', 'positive']\n                  let winner_name = winner_names[winner_count_index]\n\n                  return (\n                    <Link href={`topic?id=${o.id}`}>\n                      <a\n                        className=\"no-underline gray-hover\"\n                        style={{\n                          display: 'grid',\n                          gridTemplateColumns: `1fr ${grem * 6}px`,\n                          borderBottom: 'solid 1px black',\n                        }}\n                      >\n                        <div\n                          style={{\n                            padding: grem / 2,\n                          }}\n                        >\n                          <div\n                            style={{\n                              fontWeight: 700,\n                              textDecoration: 'underline',\n                            }}\n                          >\n                            {o.title}\n                          </div>\n                          <div\n                            style={{\n                              fontSize: font_size * 0.875,\n                              lineHeight: line_height,\n                            }}\n                          >\n                            {o.plot}\n                          </div>\n                        </div>\n                        <div\n                          style={{\n                            padding: grem / 2,\n                            fontSize: font_size * 0.875,\n                            textAlign: 'center',\n                            display: 'grid',\n                            alignItems: 'center',\n                            position: 'relative',\n                          }}\n                        >\n                          {analyze ? (\n                            <>\n                              <div\n                                style={{\n                                  position: 'absolute',\n                                  left: 0,\n                                  top: 0,\n                                  bottom: 0,\n                                  width: `${(counts[1] / reviews.length) *\n                                    100}%`,\n                                  background: scaleBlue(1),\n                                }}\n                              />\n                              <div\n                                style={{\n                                  position: 'absolute',\n                                  right: 0,\n                                  top: 0,\n                                  bottom: 0,\n                                  width: `${(counts[0] / reviews.length) *\n                                    100}%`,\n                                  background: scaleRed(1),\n                                }}\n                              />\n                            </>\n                          ) : null}\n\n                          <div style={{ position: 'relative' }}>\n                            <div>{o.children.length}</div>\n                            {analyze ? (\n                              <div>\n                                {Math.round(\n                                  (counts[winner_count_index] /\n                                    reviews.length) *\n                                    1000\n                                ) / 10}\n                                % {winner_name}\n                              </div>\n                            ) : null}\n                          </div>\n                        </div>\n                      </a>\n                    </Link>\n                  )\n                })}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Index\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAJA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;AAFA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AAFA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAEA;AAEA;AACA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAIA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AADA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AAFA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AAFA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AACA;AACA;AACA;AACA;AACA;AAEA;AAPA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AACA;AACA;AACA;AACA;AACA;AAEA;AAPA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;AAOA;;;;AA/NA;AACA;AAiOA;;;;A","sourceRoot":""}