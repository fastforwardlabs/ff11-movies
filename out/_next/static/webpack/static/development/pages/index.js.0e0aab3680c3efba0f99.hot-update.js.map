{"version":3,"file":"static/webpack/static/development/pages/index.js.0e0aab3680c3efba0f99.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import React from 'react'\nimport { data } from '../data/bert_lime_grouped_pretty'\nimport { info } from '../data/sample_movie_info.js'\nimport * as _ from 'lodash'\nimport * as d3 from 'd3'\nimport * as chroma from 'chroma-js'\n\nlet class_labels = ['negative', 'positive']\nlet red = chroma('red').luminance(0.35)\nlet blue = chroma('blue').luminance(0.35)\nlet scaleRed = chroma.scale(['white', red]).mode('lch')\nlet scaleBlue = chroma.scale(['white', blue]).mode('lch')\n\nclass Index extends React.Component {\n  componentDidMount() {\n    // let boxed = data.reduce((dict, current) => {\n    //   let slice = Object.assign({}, dict)\n    //   if (slice[current.url] === undefined) {\n    //     slice[current.url] = 'exists'\n    //   }\n    //   return slice\n    // }, {})\n    // let movie_keys = Object.keys(boxed)\n    // var promises = movie_keys.map((k, i) => {\n    //   return fetch(`http://www.omdbapi.com/?apikey=af4abd65&i=${k}`)\n    //     .then(r => r.json())\n    //     .then(json => {\n    //       let og_id = k\n    //       if (json.Title === '#DUPE#') {\n    //         return fetch(\n    //           `http://www.omdbapi.com/?apikey=af4abd65&i=${json.imdbID}`\n    //         )\n    //           .then(r => r.json())\n    //           .then(json => {\n    //             let json_mod = Object.assign({}, json)\n    //             json_mod.og_id = og_id\n    //             return json_mod\n    //           })\n    //       } else {\n    //         let json_mod = Object.assign({}, json)\n    //         json_mod.og_id = og_id\n    //         return json_mod\n    //       }\n    //     })\n    // })\n    // Promise.all(promises).then(function(results) {\n    //   console.log(JSON.stringify(results))\n    // })\n  }\n\n  render() {\n    let sorted = info.map(o => {\n      return { title: o.Title, id: o.og_id, children: [] }\n    })\n    let ids = sorted.map(o => o.id)\n    for (let i = 0; i < data.length; i++) {\n      let o = data[i]\n      let id = o.url\n      let index = ids.indexOf(id)\n      if (index === -1) {\n        console.log('miss')\n      } else {\n        sorted[index].children.push(o)\n      }\n    }\n    sorted = _.sortBy(sorted, [\n      function(o) {\n        return o.children.length\n      },\n    ])\n    sorted = sorted.slice().reverse()\n    console.log(sorted)\n\n    return (\n      <div>\n        <style jsx global>{`\n          * {\n            box-sizing: border-box;\n            font-family: sans-serif;\n          }\n          body {\n            margin: 0;\n            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto',\n              'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans',\n              'Helvetica Neue', sans-serif;\n            font-size: 16;\n            line-height: 1.5;\n            -webkit-font-smoothing: antialiased;\n            -moz-osx-font-smoothing: grayscale;\n          }\n          code {\n            font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n              monospace;\n          }\n        `}</style>\n        <div\n          style={{ display: 'none', width: 20 * 20, margin: `20px auto 40px` }}\n        >\n          <div style={{ display: 'flex' }}>\n            {scaleRed\n              .colors(10)\n              .reverse()\n              .map(c => (\n                <div style={{ height: 20, width: 20, background: c }} />\n              ))}\n          </div>\n          <div style={{ display: 'flex' }}>\n            {scaleBlue.colors(10).map(c => (\n              <div style={{ height: 20, width: 20, background: c }} />\n            ))}\n          </div>\n        </div>\n        {sorted.map(o => (\n          <div\n            style={{\n              maxWidth: 660,\n              padding: `10px 20px`,\n              margin: `0 auto 20px`,\n              border: 'solid 1px black',\n              height: 300,\n              overflow: 'auto',\n            }}\n          >\n            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n              <div>\n                <strong>{o.title}</strong>\n              </div>\n              <div>{o.children.length}</div>\n            </div>\n            {o.children.map(r => {\n              let winner_name = r.class\n              let winner_index, scaleWinner, scaleLoser\n              if (r.class_probabilities[1] > r.class_probabilities[0]) {\n                winner_index = 1\n                scaleWinner = scaleBlue\n                scaleLoser = scaleRed\n              } else {\n                winner_index = 0\n                scaleWinner = scaleRed\n                scaleLoser = scaleBlue\n              }\n\n              let max = Math.max(\n                Math.abs(_.min(r.lime_scores)),\n                Math.abs(_.max(r.lime_scores))\n              )\n\n              function scaleScore(value) {\n                if (value < 0) {\n                  return scaleRed(Math.abs(value) / max)\n                } else {\n                  return scaleBlue(Math.abs(value) / max)\n                }\n              }\n\n              return (\n                <div style={{}}>\n                  <div style={{ display: 'none' }}>\n                    <a\n                      href={`https://www.imdb.com/title/${r.url}`}\n                    >{`https://www.imdb.com/title/${r.url}`}</a>\n                  </div>\n                  <div style={{ padding: `10px 0 10px 0` }}>\n                    {r.lime_tokens.map((t, i) => {\n                      let score = r.lime_scores[i]\n                      return (\n                        <span>\n                          <span\n                            style={{\n                              background: scaleScore(score),\n                            }}\n                          >\n                            {t} ({r.lime_scores[i]})\n                          </span>{' '}\n                        </span>\n                      )\n                    })}\n                  </div>\n                  <div\n                    style={{\n                      marginBottom: 20,\n                      display: 'grid',\n                      gridTemplateColumns: 'repeat(2, 1fr)',\n                    }}\n                  >\n                    <div\n                      style={{\n                        padding: 10,\n                        background: scaleWinner(\n                          r.class_probabilities[winner_index]\n                        ),\n                      }}\n                    >\n                      {class_labels[winner_index]}:{' '}\n                      {Math.round(r.class_probabilities[winner_index] * 100)}%\n                    </div>\n                    <div\n                      style={{\n                        padding: 10,\n                        background:\n                          r.label === 'pos' ? scaleBlue(1) : scaleRed(1),\n                      }}\n                    >\n                      label: {r.label}\n                    </div>\n                  </div>\n                  <hr />\n                </div>\n              )\n            })}\n          </div>\n        ))}\n      </div>\n    )\n  }\n}\n\nexport default Index\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsjGA;AAsGA;;;;AAzMA;AACA;AA2MA;;;;A","sourceRoot":""}