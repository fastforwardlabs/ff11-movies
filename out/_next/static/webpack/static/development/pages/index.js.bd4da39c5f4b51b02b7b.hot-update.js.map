{"version":3,"file":"static/webpack/static/development/pages/index.js.bd4da39c5f4b51b02b7b.hot-update.js","sources":["webpack:///./parts/MovieGrid.js"],"sourcesContent":["import React from 'react'\nimport Link from 'next/Link'\nimport * as _ from 'lodash'\nimport {\n  red,\n  blue,\n  scaleRed,\n  scaleBlue,\n  readableSentiment,\n  class_labels,\n} from '../parts/Static'\nimport { p } from './Utils'\n\nlet link_prefix = process.env.BACKEND_URL\n\nclass MovieGrid extends React.Component {\n  render() {\n    let {\n      data,\n      info,\n      sort,\n      grem,\n      analyze,\n      show_accuracy,\n      hl_options,\n    } = this.props\n\n    let sorted = info.map(o => {\n      let new_o = Object.assign({}, o)\n      new_o.children = []\n      new_o.id = o.og_id\n      return new_o\n    })\n    let ids = sorted.map(o => o.id)\n    for (let i = 0; i < data.length; i++) {\n      let o = data[i]\n      let id = o.url\n      let index = ids.indexOf(id)\n      if (index === -1) {\n        console.log('miss')\n      } else {\n        sorted[index].children.push(o)\n      }\n    }\n\n    if (sort === 'reviews') {\n      sorted = _.sortBy(sorted, function(o) {\n        return -o.children.length\n      })\n    } else if (sort === 'positive') {\n      sorted = _.sortBy(sorted, [\n        function(o) {\n          return (\n            o.children.reduce(\n              (total, r) => (r.class === 'pos' ? total - 1 : total),\n              0\n            ) / o.children.length\n          )\n        },\n        function(o) {\n          return -o.children.length\n        },\n      ])\n    } else if (sort === 'negative') {\n      sorted = _.sortBy(sorted, [\n        function(o) {\n          return (\n            -o.children.reduce(\n              (total, r) => (r.class === 'neg' ? total + 1 : total),\n              0\n            ) / o.children.length\n          )\n        },\n        function(o) {\n          return -o.children.length\n        },\n      ])\n    } else if (sort === 'accurate') {\n      sorted = _.sortBy(sorted, [\n        function(o) {\n          return (\n            o.children.reduce(\n              (total, r) => (r.label !== r.class ? total + 1 : total),\n              0\n            ) / o.children.length\n          )\n        },\n        function(o) {\n          return -o.children.length\n        },\n      ])\n    } else if (sort === 'inaccurate') {\n      sorted = _.sortBy(sorted, [\n        function(o) {\n          return (\n            -o.children.reduce(\n              (total, r) => (r.label !== r.class ? total + 1 : total),\n              0\n            ) / o.children.length\n          )\n        },\n        function(o) {\n          return -o.children.length\n        },\n      ])\n    }\n\n    return (\n      <div\n        style={{\n          display: 'grid',\n          gridTemplateColumns: `repeat(auto-fit, minmax(240px, 1fr))`,\n          gridColumnGap: 1,\n          gridRowGap: 1,\n        }}\n      >\n        {sorted.map((o, i) => {\n          let topic_info = o\n          let reviews = data.filter(r => r.url === o.id)\n\n          let counts = reviews.reduce(\n            (counts, r) => {\n              let slice = counts.slice()\n              if (r.logits[1] > r.logits[0]) {\n                slice[1] += 1\n              } else {\n                slice[0] += 1\n              }\n              return slice\n            },\n            [0, 0]\n          )\n\n          let rightwrong = reviews.reduce(\n            (counts, r) => {\n              let slice = counts.slice()\n              if (r.label === r.class) {\n                slice[1] += 1\n              } else {\n                slice[0] += 1\n              }\n              return slice\n            },\n            [0, 0]\n          )\n          let accuracy = rightwrong[1] / reviews.length\n\n          let certainty_array = reviews.map(r => {\n            if (r.logits[1] > r.logits[0]) {\n              return {\n                class: r.class,\n                label: r.label,\n                certainty: r.class_probabilities[1],\n                correct: r.class === r.label,\n              }\n            } else {\n              return {\n                class: r.class,\n                label: r.label,\n                certainty: r.class_probabilities[0],\n              }\n            }\n          })\n          let pos = _.sortBy(\n            certainty_array.filter(r => r.class === 'pos'),\n            'certainty'\n          ).reverse()\n          let neg = _.sortBy(\n            certainty_array.filter(r => r.class === 'neg'),\n            'certainty'\n          )\n          let combined = [...pos, ...neg]\n\n          return (\n            <Link href={link_prefix + `/topic2?id=${o.id}`}>\n              <a\n                className=\"no-underline hover-block-container no-opacity-hover\"\n                style={{\n                  position: 'relative',\n                  height: 12 * grem,\n                  cursor: 'zoom-in',\n                  outline: 'solid 1px black',\n                  padding: p(grem / 2, grem / 2),\n                }}\n              >\n                <div\n                  style={{\n                    display: '-webkit-box',\n                    webkitBoxOrient: 'vertical',\n                    WebkitLineClamp: 7,\n                    overflow: 'hidden',\n                  }}\n                >\n                  <div\n                    style={{\n                      textDecoration: 'underline',\n                      position: 'relative',\n                    }}\n                  >\n                    {topic_info.Title}\n                  </div>\n                  <div style={{ textIndent: grem }}>\n                    {topic_info.Year} &middot; {topic_info.Runtime} &middot;{' '}\n                    {topic_info.Rated}\n                  </div>\n                  <div style={{ textIndent: grem }}>{topic_info.Plot}</div>\n                </div>\n                <div\n                  style={{\n                    position: 'absolute',\n                    bottom: grem / 2,\n                    left: grem / 2,\n                    right: grem / 2,\n                  }}\n                >\n                  {analyze ? (\n                    <div\n                      style={{\n                        position: 'absolute',\n                        overflow: 'hidden',\n                        width: '100%',\n                        height: grem,\n                      }}\n                    >\n                      {combined.map((c, i) => (\n                        <div\n                          key={c.certainty}\n                          style={{\n                            position: 'absolute',\n                            left: `${(1 / combined.length) * i * 100}%`,\n                            bottom: 0,\n                            height: grem,\n                            width: `${(1 / combined.length) * 100 + 0.05}%`,\n                            background:\n                              c.class === 'pos'\n                                ? scaleBlue(c.certainty)\n                                : scaleRed(c.certainty),\n                          }}\n                        />\n                      ))}\n                    </div>\n                  ) : null}\n\n                  <div style={{ position: 'relative' }}>\n                    {reviews.length} reviews\n                    {analyze ? (\n                      <span>\n                        &middot; {counts[1]} positive (\n                        {Math.floor((counts[1] / combined.length) * 100) / 1}\n                        %)\n                      </span>\n                    ) : null}\n                  </div>\n                  {show_accuracy ? (\n                    <div\n                      style={{\n                        position: 'relative',\n                        overflow: 'hidden',\n                      }}\n                    >\n                      {combined.map((c, i) => (\n                        <div\n                          key={'cert' + c.certainty}\n                          style={{\n                            position: 'absolute',\n                            left: `${(1 / combined.length) * i * 100}%`,\n                            bottom: 0,\n                            height: grem,\n                            width: `${(1 / combined.length) * 100 + 0.05}%`,\n                            background:\n                              c.label !== c.class\n                                ? c.label === 'pos'\n                                  ? scaleBlue(1)\n                                  : scaleRed(1)\n                                : '#fff',\n                          }}\n                        />\n                      ))}\n                      <div style={{ position: 'relative' }}>\n                        {rightwrong[0] > 0 ? (\n                          <span>\n                            {Math.floor((accuracy * 1000) / 10)}% accuracy (\n                            {rightwrong[0]} wrong)\n                          </span>\n                        ) : (\n                          <span>\n                            {Math.floor((accuracy * 1000) / 10)}% accuracy\n                          </span>\n                        )}\n                      </div>\n                    </div>\n                  ) : null}\n                </div>\n                <div\n                  className=\"hover-block\"\n                  style={{\n                    position: 'absolute',\n                    left: 0,\n                    top: 0,\n                    right: 0,\n                    bottom: 0,\n                    background: 'rgba(0,0,0,0.0625)',\n                    opacity:\n                      hl_options.highlight_first_in_grid && i === 0 ? 1 : null,\n                  }}\n                />\n              </a>\n            </Link>\n          )\n        })}\n      </div>\n    )\n  }\n}\n\nexport default MovieGrid\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAQA;AAEA;AACA;AACA;;;;;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAIA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AAAA;AAIA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AAAA;AAIA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AAAA;AAIA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AAAA;AAAA;AAEA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAIA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;AACA;AACA;AAJA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AAFA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAJA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;AACA;AACA;AAJA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAmBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AAFA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAkBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBA;AAGA;;;;AAzSA;AACA;AA2SA;;;;A","sourceRoot":""}