{"version":3,"file":"static/webpack/static/development/pages/topic2.js.62a3cfa703eea87f9a5d.hot-update.js","sources":["webpack:///./parts/Sentences.js"],"sourcesContent":["import React from 'react'\nimport Link from 'next/link'\nimport * as _ from 'lodash'\nimport {\n  scaleRed,\n  scaleBlue,\n  scaleTextBlue,\n  scaleTextRed,\n  colorExtend,\n  class_labels,\n} from '../parts/Static'\n\nclass Sentences extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      show_all_positive: false,\n      show_all_negative: false,\n    }\n  }\n\n  render() {\n    let { reviews, analyze, grem } = this.props\n    let top_sentences = reviews.map(r => {\n      let max = Math.max(\n        Math.abs(_.min(r.lime_scores)),\n        Math.abs(_.max(r.lime_scores))\n      )\n\n      function scaleScore(value) {\n        if (value < 0) {\n          return scaleTextRed(Math.abs(value) / max)\n        } else {\n          return scaleTextBlue(Math.abs(value) / max)\n        }\n      }\n\n      let sentences = r.lime_tokens.map((t, i) => {\n        let score = r.lime_scores[i]\n        let scaled = Math.abs(r.lime_scores[i]) / max\n        return {\n          token: t,\n          score: score,\n          class: r.class,\n          scaled_score: scaled,\n          background: scaleScore(score),\n          author: r.author,\n          date: r.date,\n          index: r.index,\n        }\n      })\n      let sorted = _.sortBy(sentences, 'score')\n      if (r.class === 'pos') sorted = sorted.reverse()\n      return sorted[0]\n    })\n\n    let top_pos = _.sortBy(top_sentences.filter(s => s.class === 'pos'), 'date')\n    let top_neg = _.sortBy(top_sentences.filter(s => s.class === 'neg'), 'date')\n\n    let show_limit = 4\n    return analyze ? (\n      <div style={{ padding: grem / 2 }}>\n        {[\n          [\n            'positive',\n            top_pos,\n            this.state.show_all_positive,\n            'show_all_positive',\n          ],\n          [\n            'negative',\n            top_neg,\n            this.state.show_all_negative,\n            'show_all_negative',\n          ],\n        ].map((a, i) => (\n          <div style={{ marginBottom: i == 0 ? grem : 0 }} key={a[0]}>\n            <div>\n              {a[1].length} {a[0]} review highlights\n            </div>\n            <div style={{ textIndent: grem }}>\n              {a[1].slice(0, a[2] ? Infinity : show_limit).map((s, i) => (\n                <span style={{}} key={s.token}>\n                  <span\n                    style={{\n                      backgroundImage: `linear-gradient(${s.background}, ${\n                        s.background\n                      })`,\n                      backgroundSize: '4px 7px',\n                      backgroundRepeat: 'repeat-x',\n                      backgroundPosition: `0 0.85em`,\n                      paddingBottom: 2,\n                    }}\n                  >\n                    {s.token}\n                  </span>{' '}\n                  by {s.author}{' '}\n                  <Link href={`/review?id=${s.index}`}>\n                    <a>{s.date} days ago</a>\n                  </Link>{' '}\n                  {a[1].length < show_limit && a[1].length - 1 === i ? (\n                    ''\n                  ) : (\n                    <span>&middot;</span>\n                  )}{' '}\n                </span>\n              ))}{' '}\n              {a[1].length > show_limit ? (\n                !a[2] ? (\n                  <button\n                    style={{ textDecoration: 'underline' }}\n                    onClick={() => this.setState({ [a[3]]: true })}\n                  >\n                    show all\n                  </button>\n                ) : (\n                  <button\n                    style={{ textDecoration: 'underline' }}\n                    onClick={() => this.setState({ [a[3]]: false })}\n                  >\n                    show less\n                  </button>\n                )\n              ) : null}\n            </div>\n          </div>\n        ))}\n      </div>\n    ) : null\n  }\n}\n\nexport default Sentences\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAQA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAFA;AAMA;AACA;;;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAGA;AACA;AACA;AACA;AAPA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAtBA;AA6BA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAzCA;AAsDA;;;;AArHA;AACA;AAuHA;;;;A","sourceRoot":""}