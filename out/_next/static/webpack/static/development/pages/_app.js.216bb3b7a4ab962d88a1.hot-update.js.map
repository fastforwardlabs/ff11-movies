{"version":3,"file":"static/webpack/static/development/pages/_app.js.216bb3b7a4ab962d88a1.hot-update.js","sources":["webpack:///./pages/_app.js"],"sourcesContent":["import React from 'react'\nimport App, { Container } from 'next/app'\nimport { info } from '../data/sample_movie_info.js'\nimport getConfig from 'next-server/config'\nimport { nouns, adjectives } from '../data/corpora.js'\nimport { red, blue, Border } from '../parts/Static'\nlet { publicRuntimeConfig } = getConfig()\nlet linkPrefix = publicRuntimeConfig.linkPrefix\nimport Link from '../parts/PrefixedLink'\nimport Bar from '../parts/Bar'\nimport Header from '../parts/Header'\nimport Tour from '../parts/Tour'\n\nlet algnames = ['NBSVM', 'BERT']\nlet algfiles = [\n  'nbsvm_lime_grouped_pretty.json',\n  'bert_lime_grouped_pretty.json',\n  'nbsvm_lime_grouped_pretty_word.json',\n]\nlet data_keys = [\n  ['nbsvm_data', 'nbsvm_lime_grouped_pretty.json', 'NBSVM'],\n  ['bert_data', 'bert_lime_grouped_pretty.json', 'BERT'],\n]\n\nclass MyApp extends App {\n  static async getInitialProps({ Component, ctx }) {\n    let pageProps = {}\n\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps(ctx)\n    }\n\n    return { pageProps }\n  }\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      analyze: true,\n      data_select: 1,\n      show_accuracy: false,\n      sort: 'reviews',\n      review_sort: 'date',\n      nbsvm_data: null,\n      compare: false,\n      bert_data: null,\n      show_info: false,\n    }\n    this.setAnalyze = this.setAnalyze.bind(this)\n    this.setReviewSort = this.setReviewSort.bind(this)\n    this.setAccuracy = this.setAccuracy.bind(this)\n    this.setSort = this.setSort.bind(this)\n    this.setAlgo = this.setAlgo.bind(this)\n    this.setCompare = this.setCompare.bind(this)\n  }\n\n  fetchData() {\n    fetch(linkPrefix + '/static/data/' + algfiles[0])\n      .then(r => r.json())\n      .then(r => {\n        fetch(linkPrefix + '/static/data/names_and_dates.json')\n          .then(nd => nd.json())\n          .then(nd => {\n            let reviews = r.map((r, i) => {\n              let new_r = Object.assign({}, r)\n              new_r.index = i\n              new_r.author = nd[i].author\n              new_r.date = nd[i].date\n              return new_r\n            })\n            let key = data_keys[0][0]\n            this.setState({ [key]: reviews })\n          })\n      })\n    fetch(linkPrefix + '/static/data/' + algfiles[1])\n      .then(r => r.json())\n      .then(r => {\n        fetch(linkPrefix + '/static/data/names_and_dates.json')\n          .then(nd => nd.json())\n          .then(nd => {\n            let reviews = r.map((r, i) => {\n              let new_r = Object.assign({}, r)\n              new_r.index = i\n              new_r.author = nd[i].author\n              new_r.date = nd[i].date\n              return new_r\n            })\n            let key = data_keys[1][0]\n            this.setState({ [key]: reviews })\n          })\n      })\n  }\n\n  componentDidMount() {\n    this.fetchData()\n  }\n\n  setAnalyze(value) {\n    this.setState({ analyze: value })\n  }\n\n  setReviewSort(value) {\n    this.setState({ review_sort: value })\n  }\n\n  setSort(value) {\n    this.setState({ sort: value })\n  }\n\n  setAlgo(index) {\n    this.setState({ data_select: index })\n  }\n\n  setAccuracy(value) {\n    this.setState({ show_accuracy: value })\n  }\n\n  setCompare(value) {\n    this.setState({ compare: value })\n  }\n\n  render() {\n    let { analyze, sort, review_sort, show_accuracy, show_info } = this.state\n\n    let data = this.state[data_keys[this.state.data_select][0]]\n\n    if (analyze === false) show_accuracy = false\n\n    let { Component, pageProps } = this.props\n    let font_size = 16\n    let line_height = 1.5\n    let grem = font_size * line_height\n\n    const { pathname } = this.props.router\n\n    let is_front = pathname === '/'\n    let is_topic = pathname.startsWith('/topic')\n\n    return (\n      <div>\n        <style jsx global>{`\n          * {\n            box-sizing: border-box;\n            font-family: sans-serif;\n          }\n          html {\n            background: #222;\n          }\n          body {\n            margin: 0;\n            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto',\n              'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans',\n              'Helvetica Neue', sans-serif;\n            font-size: 16px;\n            line-height: 1.5;\n            background: white;\n            overflow-x: hidden;\n            -webkit-font-smoothing: antialiased;\n            -moz-osx-font-smoothing: grayscale;\n          }\n          code {\n            font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n              monospace;\n          }\n          p {\n            margin: 0;\n            text-indent: 1.5rem;\n          }\n          p:first-child {\n            text-indent: 0;\n          }\n          a,\n          button {\n            color: inherit;\n            transition: opacity 0.1s linear;\n          }\n          a:hover,\n          button:hover {\n            opacity: 0.75;\n          }\n          a.no-opacity-hover:hover,\n          button.no-opacity-hover:hover {\n            opacity: 1;\n          }\n          a.no-underline {\n            text-decoration: none;\n          }\n          .opacity-inner-hover {\n            transition: opacity 0.1s linear;\n          }\n          a:hover .opacity-inner-hover,\n          button:hover .opacity-inner-hover {\n            opacity: 0.75;\n          }\n          button {\n            font: inherit;\n            font-size: inherit;\n            line-height: inherit;\n            border: none;\n            padding: 0;\n            margin: 0;\n            background: transparent;\n            cursor: pointer;\n          }\n          button:focus {\n            outline: none;\n          }\n          .hover-block {\n            position: absolute;\n            left: 0;\n            top: 0;\n            right: 0;\n            bottom: 0;\n          }\n          .hover-block-container .hover-block {\n            display: block;\n            pointer-events: none;\n            opacity: 0;\n            transition: opacity 0.1s linear;\n            background: rgba(0, 0, 0, 0.0625);\n          }\n          .hover-block-container:hover .hover-block {\n            display: block;\n            opacity: 1;\n          }\n        `}</style>\n        <style jsx global>{`\n          body {\n            overflow: ${show_info ? 'hidden' : 'auto'};\n          }\n        `}</style>\n        <Header\n          is_front={is_front}\n          grem={grem}\n          analyze={analyze}\n          show_accuracy={show_accuracy}\n        />\n        <div\n          style={{\n            minHeight: `calc(100vh - ${grem * 4 + 1}px)`,\n          }}\n        >\n          {data && this.state.nbsvm_data ? (\n            <Container>\n              <Component\n                {...pageProps}\n                font_size={font_size}\n                line_height={line_height}\n                grem={grem}\n                analyze={analyze}\n                data={data}\n                info={info}\n                sort={sort}\n                review_sort={review_sort}\n                setAnalyze={this.setAnalyze}\n                setSort={this.setSort}\n                setReviewSort={this.setReviewSort}\n                setAlgo={this.setAlgo}\n                algnames={algnames}\n                data_select={this.state.data_select}\n                show_accuracy={show_accuracy}\n                setAccuracy={this.setAccuracy}\n                compare={this.state.compare}\n                setCompare={this.setCompare}\n                nbsvm_data={this.state.nbsvm_data}\n              />\n            </Container>\n          ) : (\n            <div style={{ padding: grem / 2 }}>Loading...</div>\n          )}\n        </div>\n        <div\n          style={{\n            padding: grem / 2,\n            background: '#222',\n            color: 'white',\n            borderTop: 'solid 1px black',\n          }}\n        >\n          Textflicks is a natural language processing prototype by Cloudera Fast\n          Forward Labs\n        </div>\n        {show_info ? (\n          <Tour\n            router={this.props.router}\n            grem={grem}\n            font_size={font_size}\n            line_height={line_height}\n            grem={grem}\n            analyze={analyze}\n            data={data}\n            info={info}\n            sort={sort}\n            review_sort={review_sort}\n            setAnalyze={this.setAnalyze}\n            setSort={this.setSort}\n            setReviewSort={this.setReviewSort}\n            setAlgo={this.setAlgo}\n            algnames={algnames}\n            data_select={this.state.data_select}\n            show_accuracy={show_accuracy}\n            setAccuracy={this.setAccuracy}\n            compare={this.state.compare}\n            setCompare={this.setCompare}\n            nbsvm_data={this.state.nbsvm_data}\n          />\n        ) : null}\n      </div>\n    )\n  }\n}\n\nexport default MyApp\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAKA;AACA;AAIA;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;;;;;;AACA;AACA;;AADA;AACA;;AAEA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;AACA;AACA;AACA;AACA;AAlBA;AAmBA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AAAA;AAAA;AACA;;;AAEA;AACA;AAAA;AAAA;AACA;;;AAEA;AACA;AAAA;AAAA;AACA;;;AAEA;AACA;AAAA;AAAA;AACA;;;AAEA;AACA;AAAA;AAAA;AACA;;;AAEA;AACA;AAAA;AAAA;AACA;;;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA;AALA;AAAA;AAAA;AAQA;AACA;AACA;AAVA;AAcA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA6FA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AADA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAwBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AAJA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AA0BA;;;;AA7RA;AACA;AA+RA;;;;A","sourceRoot":""}