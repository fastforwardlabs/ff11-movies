{"version":3,"file":"static/webpack/static/development/pages/_app.js.71fa1b3b72146c9fd9c1.hot-update.js","sources":["webpack:///./parts/Bar.js"],"sourcesContent":["import React from 'react'\nimport * as chroma from 'chroma-js'\nimport { scaleRed, scaleBlue } from './Static'\n\nclass Bar extends React.Component {\n  render() {\n    let { grem, analyze, setAnalyze, combined } = this.props\n\n    let counts = [\n      combined.filter(r => r.class === 'neg').length,\n      combined.filter(r => r.class === 'pos').length,\n    ]\n\n    return (\n      <div\n        style={{\n          // background: analyze ? chroma('orchid').luminance(0.25) : 'white',\n          // color: 'white',\n          background: 'white',\n          borderTop: 'solid 1px black',\n          position: 'fixed',\n          left: 0,\n          bottom: 0,\n          right: 0,\n          display: 'flex',\n          justifyContent: 'space-between',\n        }}\n      >\n        <div style={{ padding: grem / 2 }}>\n          <div style={{ position: 'relative' }}>\n            {analyze ? (\n              <div\n                style={{\n                  position: 'absolute',\n                  left: 0,\n                  top: 0,\n                  right: 0,\n                  bottom: 0,\n                  mixBlendMode: 'multiply',\n                }}\n              >\n                {combined.map((c, i) => (\n                  <div\n                    style={{\n                      position: 'absolute',\n                      left: `${(1 / combined.length) * i * 100}%`,\n                      top: 0,\n                      bottom: 0,\n                      width: `${(1 / combined.length) * 100 + 0.05}%`,\n                      background:\n                        c.class === 'pos'\n                          ? scaleBlue(c.certainty)\n                          : scaleRed(c.certainty),\n                    }}\n                  />\n                ))}\n              </div>\n            ) : null}\n            {combined.length} reviews\n            {analyze ? (\n              <span>\n                {' '}\n                &middot;{' '}\n                {counts[1] > counts[0] ? (\n                  <span>\n                    {Math.round((counts[1] / combined.length) * 100)}% positive\n                  </span>\n                ) : (\n                  <span>\n                    {Math.round((counts[0] / combined.length) * 100)}% negative\n                  </span>\n                )}\n              </span>\n            ) : null}\n          </div>\n        </div>\n        <div style={{ display: 'flex' }}>\n          <div>\n            {!analyze ? (\n              <button\n                onClick={() => {\n                  setAnalyze(true)\n                }}\n                style={{\n                  display: 'flex',\n                  alignItems: 'center',\n                  paddingRight: grem / 2,\n                  position: 'relative',\n                  padding: grem / 2,\n                  borderLeft: 'solid 1px black',\n                }}\n              >\n                <div style={{ marginRight: grem / 2 }}>Analysis: </div>\n                <div\n                  style={{\n                    background: 'white',\n                    height: grem,\n                    width: grem * 1.75,\n                    overflow: 'hidden',\n                    border: 'solid 1px black',\n                    marginRight: grem / 2,\n                    position: 'relative',\n                  }}\n                >\n                  <div\n                    style={{\n                      width: grem * 1,\n                      height: grem,\n                      background: '#222',\n                      position: 'absolute',\n                      right: -1,\n                    }}\n                  />\n                </div>\n                off\n              </button>\n            ) : (\n              <button\n                onClick={() => {\n                  setAnalyze(false)\n                }}\n                style={{\n                  display: 'flex',\n                  alignItems: 'center',\n                  paddingRight: grem / 2,\n                  position: 'relative',\n                  padding: grem / 2,\n                }}\n              >\n                <div style={{ marginRight: grem / 2 }}>Analysis: </div>\n                <div\n                  style={{\n                    background: 'white',\n                    height: grem,\n                    width: grem * 1.75,\n                    overflow: 'hidden',\n                    border: 'solid 1px black',\n                    marginRight: grem / 2,\n                    position: 'relative',\n                  }}\n                >\n                  <div\n                    style={{\n                      width: grem * 1,\n                      height: grem,\n                      background: '#222',\n                      position: 'absolute',\n                      left: -1,\n                    }}\n                  />\n                </div>\n                on\n              </button>\n            )}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\nexport default Bar\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AACA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAmBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBA;;;;AA1JA;AACA;AA2JA;;;;A","sourceRoot":""}