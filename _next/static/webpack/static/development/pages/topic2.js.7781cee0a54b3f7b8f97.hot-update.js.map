{"version":3,"file":"static/webpack/static/development/pages/topic2.js.7781cee0a54b3f7b8f97.hot-update.js","sources":["webpack:///./pages/topic2.js"],"sourcesContent":["import { withRouter } from 'next/router'\nimport * as chroma from 'chroma-js'\nimport * as _ from 'lodash'\nimport { nouns, adjectives } from '../data/corpora.js'\nimport getConfig from 'next-server/config'\nimport Bar from '../parts/Bar'\nimport {\n  scaleRed,\n  scaleBlue,\n  scaleTextRed,\n  scaleTextBlue,\n  colorExtend,\n} from '../parts/Static'\n\nlet { publicRuntimeConfig } = getConfig()\nlet linkPrefix = publicRuntimeConfig.linkPrefix\n\nlet class_labels = ['negative', 'positive']\n\nclass Page extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      show_all_positive: false,\n      show_all_negative: false,\n    }\n  }\n\n  render() {\n    let {\n      font_size,\n      line_height,\n      grem,\n      router,\n      analyze,\n      data,\n      info,\n      setAnalyze,\n      review_sort,\n      setReviewSort,\n    } = this.props\n    let info_ids = info.map(o => o.og_id)\n    let topic_info = info[info_ids.indexOf(router.query.id)]\n\n    let reviews = data\n      .filter(o => o.url === router.query.id)\n      .map((r, i) => {\n        let new_r = Object.assign({}, r)\n        new_r.author =\n          _.sample(adjectives)\n            .toLowerCase()\n            .replace('-', '') +\n          '-' +\n          _.sample(nouns)\n            .toLowerCase()\n            .replace('-', '')\n        new_r.date = i * 2 + 3 + ' days ago'\n        return new_r\n      })\n\n    let sorted = reviews.slice()\n\n    let top_sentences = reviews.map(r => {\n      let max = Math.max(\n        Math.abs(_.min(r.lime_scores)),\n        Math.abs(_.max(r.lime_scores))\n      )\n\n      function scaleScore(value) {\n        if (value < 0) {\n          return scaleRed(Math.abs(value) / max)\n        } else {\n          return scaleBlue(Math.abs(value) / max)\n        }\n      }\n\n      let sentences = r.lime_tokens.map((t, i) => {\n        let score = r.lime_scores[i]\n        console.log(colorExtend(scaleScore(score), 1))\n        let scaled = Math.abs(r.lime_scores[i]) / max\n        return {\n          token: t,\n          score: score,\n          class: r.class,\n          scaled_score: scaled,\n          background: scaleScore(score),\n          author: r.author,\n          date: r.date,\n        }\n      })\n      let sorted = _.sortBy(sentences, 'score')\n      if (r.class === 'pos') sorted = sorted.reverse()\n      return sorted[0]\n    })\n\n    let top_pos = top_sentences.filter(s => s.class === 'pos')\n    let top_neg = top_sentences.filter(s => s.class === 'neg')\n\n    let show_limit = 4\n\n    return (\n      <div style={{ maxWidth: 700, margin: '0 auto', padding: grem / 2 }}>\n        <div style={{ marginBottom: grem }}>\n          <div>{topic_info.Title}</div>\n          <div style={{ textIndent: grem }}>{topic_info.Plot}</div>\n        </div>\n        <div style={{ marginBottom: grem }}>\n          <div>Positive review highlights</div>\n          <div style={{ textIndent: grem }}>\n            {top_pos\n              .slice(0, this.state.show_all_positive ? Infinity : show_limit)\n              .map(s => (\n                <span style={{}}>\n                  <span\n                    style={{\n                      backgroundImage: `linear-gradient(${s.background}, ${\n                        s.background\n                      })`,\n                      backgroundSize: '4px 7px',\n                      backgroundRepeat: 'repeat-x',\n                      backgroundPosition: `0 0.85em`,\n                      paddingBottom: 2,\n                    }}\n                  >\n                    {s.token}\n                  </span>{' '}\n                  by {s.author} {s.date} &bull;{' '}\n                </span>\n              ))}{' '}\n            {top_pos.length > show_limit ? (\n              <button\n                style={{ textDecoration: 'underline' }}\n                onClick={() => this.setState({ show_all_positive: true })}\n              >\n                show all\n              </button>\n            ) : null}\n          </div>\n        </div>\n        <div>\n          <div style={{ marginBottom: grem }}>{reviews.length} reviews</div>\n          <div>\n            {sorted.map((r, i) => {\n              let winner_name = r.class\n              let winner_index, scaleWinner, scaleLoser\n              if (r.class_probabilities[1] > r.class_probabilities[0]) {\n                winner_index = 1\n                scaleWinner = scaleBlue\n                scaleLoser = scaleRed\n              } else {\n                winner_index = 0\n                scaleWinner = scaleRed\n                scaleLoser = scaleBlue\n              }\n\n              let max = Math.max(\n                Math.abs(_.min(r.lime_scores)),\n                Math.abs(_.max(r.lime_scores))\n              )\n\n              function scaleScore(value) {\n                if (value < 0) {\n                  return scaleRed(Math.abs(value) / max)\n                } else {\n                  return scaleBlue(Math.abs(value) / max)\n                }\n              }\n\n              return (\n                <div style={{ marginBottom: grem * 2 }}>\n                  <div style={{ marginBottom: (grem / 2) * 0 }}>\n                    <div>\n                      <div>\n                        <div style={{ textIndent: grem }}>\n                          by {r.author} {r.date}\n                        </div>\n                        {r.lime_tokens.map((t, i) => {\n                          let score = r.lime_scores[i]\n                          let background = scaleScore(score)\n                          return (\n                            <span>\n                              {' '}\n                              <span\n                                style={{\n                                  backgroundImage: `linear-gradient(${background}, ${background})`,\n                                  backgroundSize: '4px 5px',\n                                  backgroundRepeat: 'repeat-x',\n                                  backgroundPosition: `0 0.85em`,\n                                  paddingBottom: 2,\n                                }}\n                              >\n                                {t}\n                              </span>{' '}\n                            </span>\n                          )\n                        })}\n                      </div>\n                    </div>\n                  </div>\n                  <div\n                    style={{\n                      background: scaleWinner(\n                        r.class_probabilities[winner_index]\n                      ),\n                      // textIndent: grem,\n                    }}\n                  >\n                    <span>{class_labels[winner_index]} review</span> &middot;{' '}\n                    <span style={{}}>\n                      {Math.round(r.class_probabilities[winner_index] * 100)}%\n                      certainty\n                    </span>\n                  </div>\n                </div>\n              )\n            })}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(Page)\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AAAA;AACA;AAAA;AAEA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAFA;AAMA;AACA;;;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAEA;AACA;AAAA;AAQA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAGA;AACA;AACA;AACA;AAPA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAoaA;AAKA;AACA;AACA;AAFA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAKA;;;;AAzMA;AACA;AA2MA;;;;A","sourceRoot":""}