{"version":3,"file":"static/webpack/static/development/pages/topic2.js.437b91159e2a9399a645.hot-update.js","sources":["webpack:///./pages/topic2.js"],"sourcesContent":["import { withRouter } from 'next/router'\nimport * as chroma from 'chroma-js'\nimport * as _ from 'lodash'\nimport { nouns, adjectives } from '../data/corpora.js'\nimport getConfig from 'next-server/config'\nimport Bar from '../parts/Bar'\nimport {\n  scaleRed,\n  scaleBlue,\n  scaleTextRed,\n  scaleTextBlue,\n  colorExtend,\n} from '../parts/Static'\n\nlet { publicRuntimeConfig } = getConfig()\nlet linkPrefix = publicRuntimeConfig.linkPrefix\n\nlet class_labels = ['negative', 'positive']\n\nconst Page = withRouter(\n  ({\n    font_size,\n    line_height,\n    grem,\n    router,\n    analyze,\n    data,\n    info,\n    setAnalyze,\n    review_sort,\n    setReviewSort,\n  }) => {\n    let info_ids = info.map(o => o.og_id)\n    let topic_info = info[info_ids.indexOf(router.query.id)]\n\n    let reviews = data.filter(o => o.url === router.query.id)\n\n    let sorted = reviews.slice()\n\n    return (\n      <div style={{ maxWidth: 680, margin: '0 auto' }}>\n        <div>{topic_info.Title}</div>\n        <div>{topic_info.Plot}</div>\n        <div>\n          <div> Reviews</div>\n          <div>\n            {sorted.map((r, i) => {\n              let winner_name = r.class\n              let winner_index, scaleWinner, scaleLoser\n              if (r.class_probabilities[1] > r.class_probabilities[0]) {\n                winner_index = 1\n                scaleWinner = scaleBlue\n                scaleLoser = scaleRed\n              } else {\n                winner_index = 0\n                scaleWinner = scaleRed\n                scaleLoser = scaleBlue\n              }\n\n              let max = Math.max(\n                Math.abs(_.min(r.lime_scores)),\n                Math.abs(_.max(r.lime_scores))\n              )\n\n              function scaleScore(value) {\n                if (value < 0) {\n                  return scaleRed(Math.abs(value) / max)\n                } else {\n                  return scaleBlue(Math.abs(value) / max)\n                }\n              }\n\n              return (\n                <div\n                  style={{\n                    borderBottom: `solid ${grem / 4}px ${scaleWinner(\n                      r.class_probabilities[winner_index]\n                    )}`,\n                    borderLeft: `solid ${grem / 4}px ${scaleWinner(\n                      r.class_probabilities[winner_index]\n                    )}`,\n                    borderRight: `solid ${grem / 4}px ${scaleWinner(\n                      r.class_probabilities[winner_index]\n                    )}`,\n                    padding: `0 ${grem / 2}px ${0}px ${grem / 2}px`,\n                    marginBottom: grem,\n                  }}\n                >\n                  <div>\n                    <div style={{}}>\n                      <div>\n                        <div>\n                          {_.sample(adjectives)\n                            .toLowerCase()\n                            .replace('-', '') +\n                            '-' +\n                            _.sample(nouns)\n                              .toLowerCase()\n                              .replace('-', '')}{' '}\n                          wrote &middot; {i * 2 + 3} days ago\n                        </div>\n\n                        {r.lime_tokens.map((t, i) => {\n                          let score = r.lime_scores[i]\n                          let background = scaleScore(score)\n                          return (\n                            <span>\n                              {' '}\n                              <span\n                                style={{\n                                  backgroundImage: `linear-gradient(${background}, ${background})`,\n                                  backgroundSize: '4px 7px',\n                                  backgroundRepeat: 'repeat-x',\n                                  backgroundPosition: `0 0.85em`,\n                                  paddingBottom: 2,\n                                }}\n                              >\n                                {t}\n                              </span>\n                            </span>\n                          )\n                        })}\n                      </div>\n                    </div>\n                  </div>\n                  <div>\n                    <span>{class_labels[winner_index]} review</span> &middot;{' '}\n                    <span style={{}}>\n                      {Math.round(r.class_probabilities[winner_index] * 100)}%\n                      certainty\n                    </span>\n                  </div>\n                </div>\n              )\n            })}\n          </div>\n        </div>\n      </div>\n    )\n  }\n)\n\nexport default Page\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AAAA;AACA;AAAA;AAEA;AAEA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AAGA;AAGA;AACA;AAXA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAKA;AAGA;;;;A","sourceRoot":""}